{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImagaGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","services/images-api.js","index.js"],"names":["SearchBar","onSearchClick","useState","inputValue","setInputValue","className","onSubmit","event","preventDefault","type","autoComplete","value","autoFocus","placeholder","onChange","target","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","currentTarget","ImageGalleryItem","id","webformatURL","tags","onImgClick","src","alt","defaultProps","ImageGallery","gallery","map","largeImageURL","Button","App","currentImg","setCurrentImg","setTags","imageGallery","setImageGallery","currentPage","setCurrentPage","searchQuery","setSearchQuery","isLoading","setIsLoading","error","setError","fetchImages","axios","get","getImages","then","response","data","hits","scrollTo","top","scrollHeight","behavior","catch","finally","shouldRenderLoadMoreBtn","length","style","color","url","secondaryColor","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64bcd8d8.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBar.css';\n\nexport default function SearchBar({ onSearchClick }) {\n    const [inputValue, setInputValue] = useState('');\n\n    const inputValueHandler = event => {\n        setInputValue(event.target.value);\n    };\n\n    const formSubmitHandler = event => {\n        event.preventDefault();\n        onSearchClick(inputValue);\n    };\n\n    return (\n        <header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={formSubmitHandler}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n\n                <input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    value={inputValue}\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                    onChange={inputValueHandler}\n                />\n            </form>\n        </header>\n    );\n}\n\nSearchBar.propTypes = {\n    onSearchClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        }; // eslint-disable-next-line\n    }, []);\n\n    const handleKeyDown = event => {\n        if (event.code === 'Escape') {\n            onClose();\n        }\n    };\n\n    const handleBackdropClick = event => {\n        if (event.target === event.currentTarget) {\n            onClose();\n        }\n    };\n\n    return createPortal(\n        <div className=\"Overlay\" onClick={handleBackdropClick}>\n            <div className=\"Modal\">{children}</div>\n        </div>,\n        modalRoot,\n    );\n}\n\nModal.propTypes = {\n    children: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ id, webformatURL, tags, onImgClick }) => (\n    <li key={id} className=\"ImageGalleryItem\">\n        <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\"\n            onClick={onImgClick}\n        />\n    </li>\n);\n\nImageGalleryItem.defaultProps = {\n    tags: 'some img',\n};\n\nImageGalleryItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n    onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ gallery, onImgClick }) => (\n    <ul className=\"ImageGallery\">\n        {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\n            <ImageGalleryItem\n                key={id}\n                id={id}\n                webformatURL={webformatURL}\n                tags={tags}\n                onImgClick={() => onImgClick(largeImageURL, tags)}\n            />\n        ))}\n    </ul>\n);\n\nImageGallery.propTypes = {\n    gallery: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            largeImageURL: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n    onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ onClick }) => {\n    return (\n        <button type=\"button\" className=\"loadMoreBtn button\" onClick={onClick}>\n            Load more\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport Modal from './components/Modal';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport { getImages } from '../src/services/images-api';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// import PropTypes from 'prop-types';\nimport './styles.css';\n\nexport default function App() {\n    // const [input, setInput] = useState('');\n    const [currentImg, setCurrentImg] = useState('');\n    const [tags, setTags] = useState('');\n    const [imageGallery, setImageGallery] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            return;\n        }\n        fetchImages(); // eslint-disable-next-line\n    }, [searchQuery]);\n\n    const inputSubmit = inputValue => {\n        setSearchQuery(inputValue);\n        setCurrentPage(1);\n        setImageGallery([]);\n        setError(null);\n    };\n\n    const toggleModal = () => {\n        setCurrentImg('');\n    };\n\n    const showCurrentImg = (url, tags) => {\n        setCurrentImg(url);\n        setTags(tags);\n    };\n\n    const fetchImages = () => {\n        setIsLoading(true);\n\n        getImages(currentPage, searchQuery)\n            .then(response => {\n                setImageGallery(imageGallery => [\n                    ...imageGallery,\n                    ...response.data.hits,\n                ]);\n                setCurrentPage(currentPage => currentPage + 1);\n\n                window.scrollTo({\n                    top: document.querySelector('.ImageGallery').scrollHeight,\n                    behavior: 'smooth',\n                });\n            })\n            .catch(error => setError(error))\n            .finally(() => setIsLoading(false));\n    };\n\n    const shouldRenderLoadMoreBtn = imageGallery.length > 0 && !isLoading;\n\n    return (\n        <div className=\"App\">\n            <SearchBar onSearchClick={inputSubmit} />\n            {currentImg && (\n                <Modal onClose={toggleModal}>\n                    <img src={currentImg} alt={tags} />\n                </Modal>\n            )}\n\n            {error && (\n                <h2 style={{ color: 'rgba(253, 29, 29, 1)' }}>\n                    Something went wrong. Please, try again!\n                </h2>\n            )}\n\n            <ImageGallery gallery={imageGallery} onImgClick={showCurrentImg} />\n\n            {isLoading && (\n                <Loader\n                    className=\"Loader\"\n                    type=\"MutatingDots\"\n                    color=\"rgba(253, 29, 29, 1)\"\n                    secondaryColor=\"rgba(252, 176, 69, 1)\"\n                    height={100}\n                    width={100}\n                />\n            )}\n\n            {shouldRenderLoadMoreBtn && <Button onClick={fetchImages} />}\n        </div>\n    );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst LOG = '21433732-4f4ab4e06b98cffafd914747a';\n\nconst getImages = (currentPage, searchQuery) => {\n    return axios.get(\n        `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${LOG}&image_type=photo&orientation=horizontal&per_page=12`,\n    );\n};\n\nexport { getImages };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}